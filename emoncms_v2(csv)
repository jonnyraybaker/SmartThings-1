/**
emconcmsv2 (17May2016) csv upload
*
Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
in compliance with the License. You may obtain a copy of the License at:
*
http://www.apache.org/licenses/LICENSE-2.0
*
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
for the specific language governing permissions and limitations under the License.
*
*/

definition(
name: "emconcms_v2",
namespace: "Jonathan Baker",
author: "Jonathan Baker",
description: "Log to emconcms",
category: "My Apps",
iconUrl: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience.png",
iconX2Url: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience@2x.png",
iconX3Url: "https://s3.amazonaws.com/smartapp-icons/Convenience/Cat-Convenience@2x.png")

preferences {
section("Log devices...") {
input "power", "capability.powerMeter", title: "Power", required: false, multiple: true
}

section ("Emcon Feed PUT(write) API key...") {
	input "channelKey", "text", title: "API key"
}
}

def installed() {
initialize()
}

def updated() {
unsubscribe()
unschedule()
log.debug "Attempted to Unschedule"
if (canSchedule()) {log.debug "all unscheduled."}
else {log.debug "still waiting for unschedule."}
initialize()
}

def initialize() {
subscribe(power, "power", handlePowerEvent) 
}

def handlePowerEvent(evt) {
    logField(evt,"power") { it.toString() }
}

private logField(evt, field, Closure c) {
    def value = c(evt.value)
    float watts = value.toFloat()
    def kwatts = watts/1000
    def now = Calendar.instance
    def date = now.time
    def millis = date.time
    def secs = millis/1000
    secs = secs.toInteger()
        
    def params = [
         uri: "https://emoncms.org/input/post.json?csv=${evt.value}&apikey=fc4699d93beacfab5ade0eed29d918a4"
    ] 
    
    log.debug "params = ${params}"
        
    try {
    	log.debug "running commmand: httpGet(${params})"
        httpGet(params)
	} catch (e) {
    	log.info "httpPost response: ${e}"
    }
    
}




//Jonathan Code below here (not working)
/*
def logField(watts) {
log.info "watts value= ${watts}"

//here we are crafting the specific HTTP request to send to Emon CMS given the API key
//provided earlier and the reading that the power monitor sent to the event handler.


/*
def postApi = [	
    uri: "https://emoncms.org",
    path: "/input/post.json?json={power:${watts}}",    
//    body: [ apikey: "$channelKey" ]
//    ]
*//*
def postApi = [
	uri: 'https://emoncms.org',
    path: '/input/post.json?json={power:200}&inputid=0',
    body: [ apikey: "$channelKey" ]
]

//    log.debug "postApi = ${postApi}"
    httpPost(postApi) {response -> log.info "httpPost response: ${response.status}"     }
}
*/
